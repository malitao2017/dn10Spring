<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
	<!-- spring AOP -->
	<bean id="userService" class="aop.UserServiceImpl"></bean>
	<bean id="optLogger" class="aop.OptLogger"></bean>
	<aop:config>
		<aop:pointcut id="aopPointcut" expression="execution (* aop.*.*(..))"  />
		<aop:aspect id="aopAspect" ref="optLogger">
			<!-- 环绕通知：around方法才可以获得对象的相关属性 -->
			<aop:around method="loggerAround" pointcut-ref="aopPointcut"/>
			<!-- 前置通知 -->
			<aop:before method="loggerBefore" pointcut-ref="aopPointcut"/>
			<!-- 后置通知：执行正确才可运行-可以获得返回值 -->
			<aop:after-returning method="loggerAfterReturn" pointcut-ref="aopPointcut" returning="reVal"/>
			<!-- 后置通知：执行出现问题运行-可获得异常对象 -->
			<aop:after-throwing method="loggerAfterThrow" pointcut-ref="aopPointcut" throwing="ex"/>
			<!-- 最终通知：都可以执行 -->
			<aop:after method="loggerAfter" pointcut-ref="aopPointcut" />
		</aop:aspect>
	</aop:config>
</beans>


